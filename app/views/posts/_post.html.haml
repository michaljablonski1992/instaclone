.post-cnt.my-3{ id: post_id(post) }
  .card.post-card
    .card-header.bg-white
      .d-flex.justify-content-between
        %div
          = image_tag current_user.profile_picture, class: 'img-thumbnail rounded-circle pp-img'
          .fw-bold.mx-2.d-inline-block= post.user.username
        %div
          .dropdown
            %a.btn.text-dark.fs-4.post-more.no-decor{ href: '#', role: 'button', data: { bs_toggle: 'dropdown'}, aria_expanded: 'false' }
              = '...'
            %ul.dropdown-menu
              %li
                %a.dropdown-item{ href: '#' }= t('views.post_card.edit_post')
              %li
                %a.dropdown-item{ href: '#' }= t('views.post_card.delete_post')

    .card-body
      .carousel.slide{ id: post_imgs_id(post), data: { bs_ride: 'true' } }
        .carousel-inner
          - post.images.each_with_index do |img, i|
            .carousel-item{ class: ('active' if i == 0) }
              = image_tag img, class: 'd-block w-100 post-image'
          - if post.images.count >= 2
            %button.carousel-control-prev{ type: 'button', data: { bs_target: "##{post_imgs_id(post)}", bs_slide: 'prev' } }
              %span.carousel-control-prev-icon.bg-dark.rounded-circle{ aria_hidden: 'true' }
              %span.visually-hidden= t('previous')
            %button.carousel-control-next{ type: 'button', data: { bs_target: "##{post_imgs_id(post)}", bs_slide: 'next' } }
              %span.carousel-control-next-icon.bg-dark.rounded-circle{ aria_hidden: 'true' }
              %span.visually-hidden= t('next')
        .carousel-indicators
          - post.images.each_with_index do |img, i|
            %button.bg-dark{                                             |
              class: ('active' if i == 0), type: 'button',               |
              data: { bs_target: "##{post_imgs_id(post)}",               |
              bs_slide_to: i.to_s }, aria_current: ('true' if i == 0),   |
              aria_label: "Slide #{i+1}" }
      = render 'posts/post_actions', post: post
      = render 'posts/post_comments', post: post
      = render 'posts/comments_modal', post: post
      .card-text.mt-2
        %span.fw-bold= post.user.username
        %span= post.caption
      %small.text-muted= time_ago_in_words(post.created_at)

    = form_with url: comments_path, method: :post, data: { controller: 'comments', action: 'turbo:submit-end->comments#clear' } do |f|
      .card-footer.d-flex.justify-content-between.bg-white
        = f.hidden_field :post_id, value: post.id
        = f.text_area :comment_body, class: 'w-75 comment-input border-0', placeholder: t('views.post_card.add_comment_placeholder')
        = f.submit t('views.post_card.post'), class: 'text-primary fw-bold post-btn no-decor button-no-default'
